// Copyright 2024-2025 Buf Technologies, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: acme/option/v1/option.proto

package optionv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	descriptorpb "google.golang.org/protobuf/types/descriptorpb"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

var file_acme_option_v1_option_proto_extTypes = []protoimpl.ExtensionInfo{
	{
		ExtendedType:  (*descriptorpb.FieldOptions)(nil),
		ExtensionType: (*bool)(nil),
		Field:         50001,
		Name:          "acme.option.v1.safe_for_ml",
		Tag:           "varint,50001,opt,name=safe_for_ml",
		Filename:      "acme/option/v1/option.proto",
	},
}

// Extension fields to descriptorpb.FieldOptions.
var (
	// If true, the field is safe to be used for training ML models.
	//
	// optional bool safe_for_ml = 50001;
	E_SafeForMl = &file_acme_option_v1_option_proto_extTypes[0]
)

var File_acme_option_v1_option_proto protoreflect.FileDescriptor

const file_acme_option_v1_option_proto_rawDesc = "" +
	"\n" +
	"\x1bacme/option/v1/option.proto\x12\x0eacme.option.v1\x1a google/protobuf/descriptor.proto:B\n" +
	"\vsafe_for_ml\x12\x1d.google.protobuf.FieldOptions\x18Ñ†\x03 \x01(\bR\tsafeForMl\x88\x01\x01B\xc6\x01\n" +
	"\x12com.acme.option.v1B\vOptionProtoP\x01ZIbuf.build/go/bufplugin/check/internal/example/gen/acme/option/v1;optionv1\xa2\x02\x03AOX\xaa\x02\x0eAcme.Option.V1\xca\x02\x0eAcme\\Option\\V1\xe2\x02\x1aAcme\\Option\\V1\\GPBMetadata\xea\x02\x10Acme::Option::V1b\x06proto3"

var file_acme_option_v1_option_proto_goTypes = []any{
	(*descriptorpb.FieldOptions)(nil), // 0: google.protobuf.FieldOptions
}
var file_acme_option_v1_option_proto_depIdxs = []int32{
	0, // 0: acme.option.v1.safe_for_ml:extendee -> google.protobuf.FieldOptions
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	0, // [0:1] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_acme_option_v1_option_proto_init() }
func file_acme_option_v1_option_proto_init() {
	if File_acme_option_v1_option_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_acme_option_v1_option_proto_rawDesc), len(file_acme_option_v1_option_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   0,
			NumExtensions: 1,
			NumServices:   0,
		},
		GoTypes:           file_acme_option_v1_option_proto_goTypes,
		DependencyIndexes: file_acme_option_v1_option_proto_depIdxs,
		ExtensionInfos:    file_acme_option_v1_option_proto_extTypes,
	}.Build()
	File_acme_option_v1_option_proto = out.File
	file_acme_option_v1_option_proto_goTypes = nil
	file_acme_option_v1_option_proto_depIdxs = nil
}
